[{"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\main.ts":"1","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\App.vue":"2","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\router\\index.ts":"3","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\mark\\view\\ImMark.vue":"4","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\friend\\view\\ImFriend.vue":"5","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\chat\\view\\ImChat.vue":"6","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\view\\LoginAndRegister.vue":"7","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\index\\view\\XueGaoIndex.vue":"8","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\home\\view\\ImHome.vue":"9","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\search\\SearchInfo.vue":"10","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\message\\MessageChat.vue":"11","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\LeftMenu.vue":"12","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\ObjectUtil.ts":"13","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\chat\\ChatList.vue":"14","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\message\\TextInput.vue":"15","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\store\\LoginInfoStore.ts":"16","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\LocalCache.ts":"17","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\call\\call\\LoginCall.ts":"18","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\time.ts":"19","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\store\\LoginInfoBO.ts":"20","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\store\\LoginInfoAction.ts":"21","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\ChatInfo.ts":"22","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\Emoji.ts":"23","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\axios\\request.ts":"24","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\axios\\response.ts":"25","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\constant.ts":"26","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\axios\\index.ts":"27","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\Enum\\ChatMsgTypeEnum.ts":"28","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\config\\config.ts":"29","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\message\\FriendMessage.vue":"30","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\MessageInfo.ts":"31"},{"size":230,"mtime":1669123949748,"results":"32","hashOfConfig":"33"},{"size":306,"mtime":1669124082044,"results":"34","hashOfConfig":"33"},{"size":1341,"mtime":1669123944347,"results":"35","hashOfConfig":"33"},{"size":131,"mtime":1669123737274,"results":"36","hashOfConfig":"33"},{"size":132,"mtime":1669123927670,"results":"37","hashOfConfig":"33"},{"size":784,"mtime":1669123938971,"results":"38","hashOfConfig":"33"},{"size":8528,"mtime":1669123769929,"results":"39","hashOfConfig":"33"},{"size":2471,"mtime":1669123917853,"results":"40","hashOfConfig":"33"},{"size":1872,"mtime":1669123923512,"results":"41","hashOfConfig":"33"},{"size":2581,"mtime":1669124353750,"results":"42","hashOfConfig":"33"},{"size":204,"mtime":1669124345333,"results":"43","hashOfConfig":"33"},{"size":2188,"mtime":1669124017780,"results":"44","hashOfConfig":"33"},{"size":1037,"mtime":1669124066274,"results":"45","hashOfConfig":"33"},{"size":3480,"mtime":1669124009691,"results":"46","hashOfConfig":"33"},{"size":2427,"mtime":1669123976774,"results":"47","hashOfConfig":"33"},{"size":343,"mtime":1669123894964,"results":"48","hashOfConfig":"33"},{"size":1248,"mtime":1669124078494,"results":"49","hashOfConfig":"33"},{"size":941,"mtime":1669123911430,"results":"50","hashOfConfig":"33"},{"size":1085,"mtime":1669124023048,"results":"51","hashOfConfig":"33"},{"size":684,"mtime":1669123883403,"results":"52","hashOfConfig":"33"},{"size":1685,"mtime":1669123902035,"results":"53","hashOfConfig":"33"},{"size":3135,"mtime":1669122009797,"results":"54","hashOfConfig":"33"},{"size":13982,"mtime":1669122009787,"results":"55","hashOfConfig":"33"},{"size":1097,"mtime":1669124061592,"results":"56","hashOfConfig":"33"},{"size":206,"mtime":1669124045622,"results":"57","hashOfConfig":"33"},{"size":81,"mtime":1669124029314,"results":"58","hashOfConfig":"33"},{"size":5157,"mtime":1669124322457,"results":"59","hashOfConfig":"33"},{"size":841,"mtime":1669122009769,"results":"60","hashOfConfig":"33"},{"size":257,"mtime":1669179150062,"results":"61","hashOfConfig":"33"},{"size":3530,"mtime":1669124647232,"results":"62","hashOfConfig":"33"},{"size":1404,"mtime":1669122009815,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"bwwevd",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\main.ts",[],[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\App.vue",[],[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\router\\index.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\mark\\view\\ImMark.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\friend\\view\\ImFriend.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\chat\\view\\ImChat.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\view\\LoginAndRegister.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\index\\view\\XueGaoIndex.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\home\\view\\ImHome.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\search\\SearchInfo.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\message\\MessageChat.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\LeftMenu.vue",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\ObjectUtil.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\chat\\ChatList.vue",["135","136"],"<template>\n  <div class=\"msgList user-select-none\">\n    <ul>\n      <template v-for=\"item in chatInfoList\">\n        <li\n          v-if=\"item.blackFlag\"\n          :key=\"item.id\"\n          class=\"selectChat\"\n          @click=\"selectChat(item)\"\n        >\n          <div class=\"list-left\">\n            <img\n              class=\"avatar\"\n              width=\"40\"\n              height=\"40\"\n              :alt=\"\n                item.friendInfo.remark === ''\n                  ? item.friendInfo.nickname\n                  : item.friendInfo.remark\n              \"\n              :src=\"item.friendInfo.avatar\"\n            />\n          </div>\n          <div class=\"list-right\">\n            <!--            聊天的人的备注  -->\n            <p class=\"name\">\n              {{\n                item.friendInfo.remark === null || item.friendInfo.remark === \"\"\n                  ? item.friendInfo.nickname\n                  : item.friendInfo.remark\n              }}\n            </p>\n            <!--            朋友之间聊天的最后一条消息 的发送时间-->\n            <span class=\"time\" v-text=\"getTimes(item.lastMsgTime)\"></span>\n            <!--            朋友之间聊天的最后一条消息-->\n            <p\n              class=\"lastMsg\"\n              v-html=\"\n                replaceFace(\n                  item.messageList.length > 0\n                    ? item.messageList[item.messageList.length - 1]\n                    : ''\n                )\n              \"\n            ></p>\n          </div>\n        </li>\n      </template>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ChatInfo, getChatInfoList } from \"@/model/ChatInfo\";\nimport { isEmpty } from \"@/common/ObjectUtil\";\nimport { replaceFace } from \"@/model/Emoji\";\nimport { computed } from \"vue\";\n\nconsole.log(\"  chat list 进来了\");\n\nlet chatInfoList = computed(() => {\n  return getChatInfoList();\n});\n\nlet selectChat = function (item: ChatInfo) {\n  console.log(\" item = \", item);\n  console.log(\" chatId = \", item.chatId);\n};\n\nlet getTimes = function (lastMsgTime: Date) {\n  console.log(\" lastMsgTime \", lastMsgTime);\n  if (isEmpty(lastMsgTime)) {\n    return \"\";\n  }\n  if (lastMsgTime.getMinutes() < 10) {\n    return lastMsgTime.getHours() + \":0\" + lastMsgTime.getMinutes();\n  } else {\n    return lastMsgTime.getHours() + \":\" + lastMsgTime.getMinutes();\n  }\n};\n\nlet consoleLog = function (msg: string, info: any) {\n  console.log(msg + \" = \", info);\n};\n</script>\n\n<style lang=\"css\" scoped>\n.msgList {\n  width: 100%;\n  height: 570px;\n}\n\n.selectChat {\n  display: flex;\n  padding: 12px;\n  transition: background-color 0.1s;\n  font-size: 0;\n}\n\n.selectChat:hover {\n  display: flex;\n  padding: 12px;\n  background-color: rgb(220, 220, 220);\n}\n\n.selectChat:active {\n  display: flex;\n  padding: 12px;\n  background-color: rgb(196, 196, 196);\n}\n\n.selectChat .list-left {\n  position: relative;\n  margin-right: 12px;\n}\n\n.selectChat .list-left .avatar {\n  border-radius: 2px;\n}\n\n.selectChat .list-right {\n  position: relative;\n  flex: 1;\n  margin-top: 4px;\n}\n\n.selectChat .list-right .name {\n  display: inline-block;\n  vertical-align: top;\n  font-size: 14px;\n}\n\n.selectChat .list-right .time {\n  float: right;\n  color: #999;\n  font-size: 10px;\n  vertical-align: top;\n}\n\n.selectChat .list-right .lastMsg {\n  position: absolute;\n  font-size: 12px;\n  width: 130px;\n  height: 15px;\n  line-height: 15px;\n  color: #999;\n  bottom: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\message\\TextInput.vue",["137","138","139"],"<template>\n  <div class=\"text\">\n    <div\n      id=\"textarea\"\n      class=\"textarea\"\n      contenteditable=\"true\"\n      ref=\"text\"\n      @onpaste=\"pasteListener($event)\"\n      @keydown.delete=\"backspaceKeyDownListener($event)\"\n      @keydown.enter=\"enterKeyDownListener($event)\"\n      @paste=\"pasteListener\"\n    ></div>\n    <div class=\"send\" @click=\"sendMsg\">\n      <span>发送(ent)</span>\n    </div>\n    <transition name=\"appear\">\n      <div class=\"warn\" v-show=\"alertWarnMsgFlag\">\n        <div class=\"description\">不能发送空白信息</div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nlet alertWarnMsgFlag = false;\nlet pasteListener = function (e: PointerEvent) {\n  console.log(\" 粘贴板事件  \");\n};\n\n// 监听回退按键\nlet backspaceKeyDownListener = function (e: PointerEvent) {\n  console.log(\" backspaceListener \");\n};\n\n// 按回车发送信息\nlet enterKeyDownListener = function onkeydown(e: PointerEvent) {\n  // if (e.ctrlKey && e.keyCode == 13) {\n  // } else {\n  //   send();\n  //   e.preventDefault();\n  // }\n  console.log(\" enterKeyDownListener \");\n};\n\nlet sendMsg = function () {\n  console.log(\" sendMsg \");\n};\n</script>\n\n<style scoped lang=\"css\">\n.text {\n  position: relative;\n  background: #fff;\n}\n\n.text .send {\n  position: absolute;\n  cursor: pointer;\n  bottom: 10px;\n  right: 30px;\n  width: 75px;\n  height: 28px;\n  line-height: 28px;\n  box-sizing: border-box;\n  text-align: center;\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n  background: #f5f5f5;\n  font-size: 14px;\n  color: #7c7c7c;\n}\n.text .send:hover {\n  background: rgb(18, 150, 17);\n  color: #fff;\n}\n\n.text .warn {\n  position: absolute;\n  bottom: 50px;\n  right: 10px;\n  width: 110px;\n  height: 30px;\n  line-height: 30px;\n  font-size: 12px;\n  text-align: center;\n  border: 1px solid #bdbdbd;\n  border-radius: 4px;\n  box-shadow: 0 1px 5px 1px #bdbdbd;\n}\n\n.warn.appear-enter-active,\n.warn.appear-leave-active {\n  transition: all 1s;\n}\n\n.warn.appear-enter,\n.warn.appear-leave-active {\n  transition: all 1s;\n}\n\n.warn:before {\n  content: \" \";\n  position: absolute;\n  top: 100%;\n  right: 20px;\n  border: 7px solid transparent;\n  border-top-color: #fff;\n  filter: drop-shadow(1px 3px 2px #bdbdbd);\n}\n\n#textarea {\n  box-sizing: border-box;\n  padding-left: 30px;\n  height: 110px;\n  width: 690px;\n  border: none;\n  outline: none;\n  overflow-y: scroll;\n  font-family: \"Micrsofot Yahei\";\n  resize: none;\n}\n</style>\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\store\\LoginInfoStore.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\LocalCache.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\call\\call\\LoginCall.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\time.ts",["140"],"/**\n * @description 获取两个时间的相距多少分钟\n * @returns {Number}\n * @param startDate\n * @param endDate\n */\nexport const getMinute = function (startDate: Date, endDate: Date) {\n  const diff = endDate.getTime() - startDate.getTime(); //时间差的毫秒数\n  //计算出相差天数\n  // var days=Math.floor(diff/(24*3600*1000));\n\n  //计算出小时数\n  const leave1 = diff % (24 * 3600 * 1000); //计算天数后剩余的毫秒数\n  const hours = Math.floor(leave1 / (3600 * 1000));\n  //计算相差分钟数\n  const leave2 = leave1 % (3600 * 1000); //计算小时数后剩余的毫秒数\n  const minutes = Math.floor(leave2 / (60 * 1000));\n\n  //计算相差秒数\n  // var leave3=leave2%(60*1000);      //计算分钟数后剩余的毫秒数\n  // var seconds=Math.round(leave3/1000);\n\n  if (minutes > 0) {\n    return minutes;\n  }\n  return 0;\n};\n\n//从1970年开始的毫秒数然后截取10位变成 从1970年开始的秒数\nexport const getTime = function (): number {\n  return getDate().getTime();\n};\n\nexport const getDate = function () {\n  return new Date();\n};\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\store\\LoginInfoBO.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\service\\login\\store\\LoginInfoAction.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\ChatInfo.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\Emoji.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\axios\\request.ts",["141","142"],"// request.ts\nimport axios from \"./index\";\nimport qs from \"qs\";\nimport { Result } from \"@/common/axios/response\";\n\nexport class Request {\n  //Promise类型需要接收一个泛型参数（目的是为了定义响应数据的类型）\n  //T用于指定响应数据中data的类型\n  static async get<T>(url: string, params?: any): Promise<Result<T>> {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(url, params)\n        .then((res) => {\n          resolve(res.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  // Promise类型需要接收一个泛型参数（目的是为了定义响应数据的类型）\n  // T用于指定响应数据中data的类型\n  static async post<T>(url: string, params?: any): Promise<Result<T>> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(url, qs.parse(params), {\n          headers: { \"Content-type\": \"application/json\" },\n        })\n        .then((res) => {\n          resolve(res.data);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\axios\\response.ts",["143"],"export interface Result<T = any> {\n  code: number;\n  message: string;\n  data: T;\n  traceId: string;\n  total: string;\n  rowList: Array<T>;\n}\n\nexport enum RespCodeEnum {\n  code_200 = 200,\n  code_500 = 500,\n}\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\constant.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\axios\\index.ts",["144","145","146"],"import axios, { AxiosRequestConfig, Method } from \"axios\";\nimport { apiUrl } from \"@/common/config/config\";\nimport { useLoginStore } from \"@/service/login/store/LoginInfoStore\";\n\n// 定义接口\ninterface RequestInfo {\n  url?: string;\n  method?: Method | string;\n  params: any;\n  cancel: any;\n}\n\n// 取消重复请求\nconst requestInfoList: Array<RequestInfo> = [];\nconst CancelToken = axios.CancelToken;\n\n// 移除重复请求\nconst removeRequestInfo = (config: AxiosRequestConfig) => {\n  for (const key in requestInfoList) {\n    const item: number = +key;\n    const list: RequestInfo = requestInfoList[key];\n    // 当前请求在数组中存在时执行函数体\n    if (\n      list.url === config.url &&\n      list.method === config.method &&\n      JSON.stringify(list.params) === JSON.stringify(config.params)\n    ) {\n      // 执行取消操作\n      list.cancel(\"操作太频繁，请稍后再试\");\n      // 从数组中移除记录\n      requestInfoList.splice(item, 1);\n    }\n  }\n};\n\n/* 实例化请求配置 */\nconst instance = axios.create({\n  headers: {\n    //php 的 post 传输请求头一定要这个 不然报错 接收不到值\n    \"Content-Type\": \"application/json;charset=UTF-8\",\n    \"Access-Control-Allow-Origin-Type\": \"*\",\n  },\n  // 请求时长\n  timeout: 1000 * 5,\n  // 请求的base地址 这块以后根据不同的模块调不同的api\n  baseURL: apiUrl,\n  //     ? \"测试\"\n  //     : \"正式\",\n  // 表示跨域请求时是否需要使用凭证\n  withCredentials: false,\n});\n\n/**\n * 请求拦截器\n * 每次请求前，如果存在token则在请求头中携带token\n */\ninstance.interceptors.request.use(\n  (config) => {\n    console.log(\"请求拦截器，执行\", JSON.stringify(config));\n    removeRequestInfo(config);\n    config.cancelToken = new CancelToken((c) => {\n      requestInfoList.push({\n        url: config.url,\n        method: config.method,\n        params: config.params,\n        cancel: c,\n      });\n    });\n    console.log(\" requestInfoList \", JSON.stringify(requestInfoList));\n    // 登录流程控制中，根据本地是否存在token判断用户的登录情况\n    // 但是即使token存在，也有可能token是过期的，所以在每次的请求头中携带token\n    // 后台根据携带的token判断用户的登录情况，并返回给我们对应的状态码\n    // 而后我们可以在响应拦截器中，根据状态码进行一些统一的操作。\n    // const token = store.state.token;\n    // localStorage.setItem('token', token);\n\n    if (config.headers !== null) {\n      const store = useLoginStore();\n      const token = store.action.getToken();\n      console.log(\"请求拦截器，token = \", token);\n      config.headers!.head?.set(\"token\", token);\n    }\n    console.log(\"请求拦截器，执行成功\", JSON.stringify(config));\n    return config;\n  },\n  (error) => {\n    console.log(\"请求拦截器，失败\", JSON.stringify(error));\n    return Promise.reject(error.data.error.message);\n  }\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  function (config) {\n    // dataList.show = true;\n    console.log(\"响应拦截器，执行\", JSON.stringify(config));\n    removeRequestInfo(config.config);\n    // 请求成功\n    if (config.status === 200 || config.status === 204) {\n      // setTimeout(() => {\n      //     dataList.show = false;\n      // }, 400);\n      return Promise.resolve(config);\n    } else {\n      return Promise.reject(config);\n    }\n    // 请求失败\n  },\n  function (error) {\n    console.log(\" 请求失败 \", JSON.stringify(error));\n    const { response } = error;\n    if (response) {\n      // errorHandle(response.status, response.data.message);\n      // 超时重新请求\n      const config = error.config;\n      // 全局的请求次数,请求的间隙\n      const [RETRY_COUNT, RETRY_DELAY] = [3, 1000];\n\n      if (config && RETRY_COUNT) {\n        // 设置用于跟踪重试计数的变量\n        config.__retryCount = config.__retryCount || 0;\n        // 检查是否已经把重试的总数用完\n        if (config.__retryCount >= RETRY_COUNT) {\n          return Promise.reject(response || { message: error.message });\n        }\n        // 增加重试计数\n        config.__retryCount++;\n        // 创造新的Promise来处理指数后退\n        const backoff = new Promise<void>((resolve) => {\n          setTimeout(() => {\n            resolve();\n          }, RETRY_DELAY || 1);\n        });\n        // instance重试请求的Promise\n        return backoff.then(() => {\n          return instance(config);\n        });\n      }\n\n      return Promise.reject(response);\n    } else {\n      // 处理断网的情况\n      // eg:请求超时或断网时，更新state的network状态\n      // network状态在app.vue中控制着一个全局的断网提示组件的显示隐藏\n      // 后续增加断网情况下做的一些操作\n      // store.commit(\"networkState\", false);\n      const loginStore = useLoginStore();\n      loginStore.action.incrementNetworkStateCount();\n      console.log(\"getLoginInfo axios\", loginStore.action.getLoginInfo());\n    }\n  }\n);\n\n// 只需要考虑单一职责，这块只封装axios\nexport default instance;\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\Enum\\ChatMsgTypeEnum.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\common\\config\\config.ts",[],"D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\components\\message\\FriendMessage.vue",["147"],"<template>\n  <div class=\"messageChatClass\">\n    <header class=\"header user-select-none\">\n      <div class=\"friendName\">\n        <!--        <span style=\"cursor: pointer\" @click=\"showChatInfo\">{{-->\n        <!--          item.friendInfo.remark === \"\"-->\n        <!--            ? item.friendInfo.nickname-->\n        <!--            : item.friendInfo.remark-->\n        <!--        }}</span>-->\n        <span style=\"cursor: pointer\" @click=\"showChatInfo\"\n          >item.friendInfo.remark</span\n        >\n      </div>\n      <!--      <i-->\n      <!--        style=\"cursor: pointer\"-->\n      <!--        @click=\"showChatInfo\"-->\n      <!--        class=\"icon iconfont icon-more info\"-->\n      <!--      ></i>-->\n    </header>\n    <!--      @mousewheel=\"mousewheel\"-->\n    <div class=\"message-wrapper scrollbar\" @scroll=\"handleScroll\" ref=\"list\">\n      <!--v-if=\"selectedChat\"-->\n      <ul>\n        <li v-for=\"item in showMessageList\" class=\"message-item\" :key=\"item.id\">\n          <div class=\"time selectNone\">\n            <span v-if=\"item.showTime\">{{ convertToTime(item.date) }}</span>\n          </div>\n          <div\n            class=\"main\"\n            :class=\"{\n              self: isMySelf(item.username),\n              other: !isMySelf(item.username),\n            }\"\n          >\n            <div\n              class=\"text\"\n              v-if=\"item.type === 1\"\n              v-html=\"replaceFace(item)\"\n            ></div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, ref } from \"vue\";\nimport { getMessageInfoList, MessageInfo } from \"@/model/MessageInfo\";\nimport { replaceFace } from \"@/model/Emoji\";\n\nlet showMessageList = ref<Array<MessageInfo>>(new Array<MessageInfo>());\n\nlet showChatInfo = function () {\n  console.log(\"  showChatInfo \");\n};\n// let mousewheel = function () {\n//   console.log(\"  mousewheel \");\n// };\nlet handleScroll = function () {\n  console.log(\"  showChatInfo \");\n  // this.$parent.showChatInfo();\n};\n\nlet convertToTime = function (date: Date) {\n  if (date.getMinutes() < 10) {\n    return date.getHours() + \":0\" + date.getMinutes();\n  } else {\n    return date.getHours() + \":\" + date.getMinutes();\n  }\n};\n\nlet isMySelf = function (userName: string) {\n  // return userName === user.username\n  return false;\n};\n\nonMounted(() => {\n  console.log(\" onMounted \");\n  for (const messageInfo of getMessageInfoList()) {\n    showMessageList.value.push(messageInfo);\n  }\n  console.log(\" onMounted \", JSON.stringify(showMessageList));\n});\n</script>\n\n<style scoped lang=\"css\">\n.messageChatClass {\n  width: 100%;\n  height: 100%;\n  background-color: #f5f5f5;\n}\n\n.header {\n  height: 60px;\n  padding: 20px 0 0 30px;\n  box-sizing: border-box;\n}\n\n.friendName {\n  font-size: 19px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.message-wrapper {\n  min-height: 420px;\n  max-height: 420px;\n  padding: 0 15px 18px 15px;\n  box-sizing: border-box;\n  border-top: 1px solid #e7e7e7;\n  border-bottom: 1px solid #e7e7e7;\n}\n\n.message-wrapper .more {\n  text-align: center;\n  color: #2c90ff;\n  margin-top: 8px;\n  font-size: 12px;\n}\n\n.message-wrapper .message-item {\n  margin-top: 16px;\n}\n\n.message-wrapper .messageChatClass {\n  margin-bottom: 15px;\n}\n\n.message-wrapper .time {\n  width: 100%;\n  font-size: 12px;\n  margin-top: 7px;\n  margin-bottom: 10px;\n  text-align: center;\n}\n\n.message-wrapper .time span {\n  display: inline-block;\n  padding: 4px 6px;\n  color: #fff;\n  border-radius: 3px;\n  background-color: #dcdcdc;\n}\n</style>\n","D:\\git\\my\\xuegao-im-chat-v2\\xuegao-vue-wechat-demo-v2\\src\\model\\MessageInfo.ts",[],{"ruleId":"148","severity":1,"message":"149","line":82,"column":5,"nodeType":"150","messageId":"151","endLine":82,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":82,"column":47,"nodeType":"154","messageId":"155","endLine":82,"endColumn":50,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"157","line":26,"column":31,"nodeType":"150","messageId":"151","endLine":26,"endColumn":46},{"ruleId":"148","severity":1,"message":"157","line":31,"column":42,"nodeType":"150","messageId":"151","endLine":31,"endColumn":57},{"ruleId":"148","severity":1,"message":"157","line":36,"column":47,"nodeType":"150","messageId":"151","endLine":36,"endColumn":62},{"ruleId":"148","severity":1,"message":"158","line":14,"column":9,"nodeType":"150","messageId":"151","endLine":14,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":9,"column":45,"nodeType":"154","messageId":"155","endLine":9,"endColumn":48,"suggestions":"159"},{"ruleId":"152","severity":1,"message":"153","line":24,"column":46,"nodeType":"154","messageId":"155","endLine":24,"endColumn":49,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":29,"nodeType":"154","messageId":"155","endLine":1,"endColumn":32,"suggestions":"161"},{"ruleId":"152","severity":1,"message":"153","line":9,"column":11,"nodeType":"154","messageId":"155","endLine":9,"endColumn":14,"suggestions":"162"},{"ruleId":"152","severity":1,"message":"153","line":10,"column":11,"nodeType":"154","messageId":"155","endLine":10,"endColumn":14,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":81,"column":7,"nodeType":"166","messageId":"167","endLine":81,"endColumn":22,"suggestions":"168"},{"ruleId":"148","severity":1,"message":"169","line":73,"column":26,"nodeType":"150","messageId":"151","endLine":73,"endColumn":42},"@typescript-eslint/no-unused-vars","'consoleLog' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["170","171"],"'e' is defined but never used.","'hours' is assigned a value but never used.",["172","173"],["174","175"],["176","177"],["178","179"],["180","181"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["182"],"'userName' is defined but never used.",{"messageId":"183","fix":"184","desc":"185"},{"messageId":"186","fix":"187","desc":"188"},{"messageId":"183","fix":"189","desc":"185"},{"messageId":"186","fix":"190","desc":"188"},{"messageId":"183","fix":"191","desc":"185"},{"messageId":"186","fix":"192","desc":"188"},{"messageId":"183","fix":"193","desc":"185"},{"messageId":"186","fix":"194","desc":"188"},{"messageId":"183","fix":"195","desc":"185"},{"messageId":"186","fix":"196","desc":"188"},{"messageId":"183","fix":"197","desc":"185"},{"messageId":"186","fix":"198","desc":"188"},{"messageId":"199","fix":"200","desc":"201"},"suggestUnknown",{"range":"202","text":"203"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"202","text":"204"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"205","text":"203"},{"range":"205","text":"204"},{"range":"206","text":"203"},{"range":"206","text":"204"},{"range":"207","text":"203"},{"range":"207","text":"204"},{"range":"208","text":"203"},{"range":"208","text":"204"},{"range":"209","text":"203"},{"range":"209","text":"204"},"suggestOptionalChain",{"range":"210","text":"211"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",[2313,2316],"unknown","never",[244,247],[603,606],[28,31],[265,268],[280,283],[2144,2145],"?"]